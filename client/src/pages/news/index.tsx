import Container from "@/components/Container";
import Main from "@/components/Main/Main";
import Head from "next/head";
import { useSelector } from "react-redux";
import { Category } from "@/ts/types/app_types";
import { Post as PostType } from "@/ts/types/app_types";
import Post from "@/components/Posts/Post";
import useFetchData from "@/custom-hooks/useFetchData";
import uuid from "react-uuid";
import { URL } from "@/data";

import NewsFilter from "@/components/News/NewsFilter";
import { useRouter } from "next/router";
import { useEffect, useMemo, useState } from "react";
import Pagination from "@/components/Pagination/Pagination";
import { urlToQuery } from "@/helpers";

const NewsPage = () => {
  const { asPath } = useRouter();
  const query = useMemo(() => {
    return urlToQuery(asPath);
  }, [asPath]);
  const limit = 10;

  const [filter, setFilter] = useState<NewsFilter>({
    category: query.category ? query.category : [],
    title: query.title ? query.title[0] : "",
    page: query.page ? +query.page[0] : 1,
  });

  const createFetchStr = (basicURL: string, asPath: string) => {
    return `${basicURL}${
      asPath.split("?")[1]
        ? `?${asPath.split("?")[1]}&limit=${limit}`
        : `?limit=${limit}`
    }`;
  };

  const { data, setURL } = useFetchData(createFetchStr(`${URL}/posts`, asPath));

  useEffect(() => {
    setURL(createFetchStr(`${URL}/posts`, asPath));
  }, [asPath]);

  return (
    <>
      <Head>
        <title>Новини | UZHNU</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Container>
          <div className="flex flex-col flex-1 py-[30px]">
            <div className="flex flex-col flex-1 px-[25px]">
              <div className="flex flex-col flex-1 gap-[15px] max-w-[800px] w-full">
                <NewsFilter filter={filter} setFilter={setFilter} />
                {data && (
                  <>
                    <div className="flex flex-col flex-1 gap-[15px]">
                      {data.posts.map((post: PostType) => {
                        return <Post key={uuid()} data={post} />;
                      })}
                    </div>
                  </>
                )}
                {data && (
                  <Pagination
                    total={data.total}
                    currentPage={data.page}
                    limit={limit}
                    setFilter={setFilter}
                  />
                )}
              </div>
            </div>
          </div>
        </Container>
      </Main>
    </>
  );
};

export default NewsPage;
